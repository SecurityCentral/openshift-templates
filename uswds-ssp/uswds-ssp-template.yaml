apiVersion: v1
kind: Template
metadata:
  name: uswds-ssp-template
  annotations:
    description: "Creates a website using the United States Web Design System (USWDS) to show System Security Plans (SSPs)."
    tags: "security,ssp,government"
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: "${NAME}"
      name: "${NAME}"
      namespace: ${NAMESPACE}
    spec:
      ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        deploymentconfig: "${NAME}"
  - apiVersion: autoscaling/v1
    kind: HorizontalPodAutoscaler
    metadata:
      labels:
        app: "${NAME}"
      name: "${NAME}"
      namespace: ${NAMESPACE}
    spec:
      maxReplicas: 2
      minReplicas: 1
      scaleTargetRef:
        apiVersion: v1
        kind: DeploymentConfig
        name: "${NAME}"
      targetCPUUtilizationPercentage: 50
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: "${NAME}"
      name: "${NAME}"
      namespace: ${NAMESPACE}
    spec:
      replicas: 1
      selector:
        deploymentconfig: "${NAME}"
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: "${NAME}"
            deploymentconfig: "${NAME}"
        spec:
          containers:
          - image: "${NAMESPACE}/${NAME}"
            imagePullPolicy: Always
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 120
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            name: "${NAME}"
            ports:
            - containerPort: 8080
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 60
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              limits:
                memory: 3Gi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - "${NAME}"
          from:
            kind: ImageStreamTag
            name: "${NAME}:latest"
            namespace: ${NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        app: "${NAME}"
      name: "${NAME}"
      namespace: ${NAMESPACE}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: "${NAME}:latest"
      resources:
        limits:
          memory: 2Gi
        requests:
          memory: 2Gi
      runPolicy: Serial
      source:
        git:
          ref: ${OC_SOURCE_REPOSITORY_REF}
          uri: ${OC_SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: uswds-masonry:latest
            namespace: ${NAMESPACE}
        type: Source
      triggers:
      - imageChange:
        type: ImageChange
      - type: ConfigChange
      - generic:
          secret: dfedad05f3c0bc41
        type: Generic
      - github:
          secret: dd31c401929fca25
        type: GitHub
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        app: "${NAME}"
      name: uswds-masonry
      namespace: ${NAMESPACE}
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: uswds-masonry:latest
      postCommit: {}
      resources:
        limits:
          memory: 2Gi
        requests:
          memory: 2Gi
      runPolicy: Serial
      source:
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: ruby-container:latest
        type: Source
      successfulBuildsHistoryLimit: 5
      triggers:
      - imageChange:
        type: ImageChange
      - type: ConfigChange
      - generic:
          secret: dfedad05f3c0bc41
        type: Generic
      - github:
          secret: dd31c401929fca25
        type: GitHub
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        app: "${NAME}"
      name: "${NAME}"
      namespace: ${NAMESPACE}
    spec:
      lookupPolicy:
        local: false
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        app: ruby-container
      name: ruby-container
      namespace: ${NAMESPACE}
    spec:
      tags:
      - from:
          kind: DockerImage
          name: docker.io/securitycentral/ruby-container:latest
        importPolicy:
          scheduled: true
        name: latest
        referencePolicy:
          type: Source
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        app: "${NAME}"
      name: uswds-masonry
      namespace: ${NAMESPACE}
    spec:
      lookupPolicy:
        local: false
        tag: latest
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: "${NAME}"
      name: "${NAME}"
      namespace: ${NAMESPACE}
    spec:
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: "${NAME}"
        weight: 100
      wildcardPolicy: None
parameters:
  - name: NAME
    displayName: Name
    description: "The name assied to the project"
    required: true
    value: uswds-ssp-example
    
  - name: NAMESPACE
    displayName: Namespace
    description: "The OpenShift Namespace where the ImageStream resides."
    required: true
    value: redhatgov
    
  - description: "The URL of the repository with your application source code."
    displayName: "Git Repository URL"
    name: "SOURCE_REPOSITORY_URL"
    required: true
    value: "https://github.com/redhatgov/ato-pathways.git"

  - description: "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
    displayName: "Git Reference"
    name: SOURCE_REPOSITORY_REF
    required: true
    value: master
    
  - description: "The URL of the OpenControl repository with your application source code."
    displayName: "OpenControl Git Repository URL"
    name: "OC_SOURCE_REPOSITORY_URL"
    required: true
    value: "https://github.com/complianceascode/redhat.git"

  - description: "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
    displayName: "OpenControl Git Reference"
    name: OC_SOURCE_REPOSITORY_REF
    required: true
    value: opencontrol

